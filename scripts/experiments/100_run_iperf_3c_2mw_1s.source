# this script is called by an experiment script (e.g. e610)
# to run iperf measurements with the designated configuration (see filename)
# note: separate measurements are done for sequential and parallel measurments of the bandwidths
#
# result files are stored at the defined locations of the experiment
#
# version 2018-11-01, Pirmin Schmid

for iteration in 1 2 3 4; do
    # run iperf to measure bandwidth -- sequential testing; each iperf server started individually to avoid observed timeouts
    # data flows measured separately to have consistency in the naming of the data files (see parallel measurements)
    # write-only data flow direction
    echo "\n--- ${r}: run iperf iteration $iteration :: sequential mode :: clients -- middleware --> server ---"
    ssh $m4 "sh $run_path/run_iperf_server_side.sh $r $iteration seq" &
    python3 wait_for_callbacks.py $x9 $server_callback_port 1
    ssh $c1 "sh $run_path/run_iperf_connect_to_one_server.sh $r $iteration seq m1 $m4"
    ssh $c2 "sh $run_path/run_iperf_connect_to_one_server.sh $r $iteration seq m1 $m4"
    ssh $c3 "sh $run_path/run_iperf_connect_to_one_server.sh $r $iteration seq m1 $m4"
    ssh $m4 "killall iperf"

    ssh $m5 "sh $run_path/run_iperf_server_side.sh $r $iteration seq" &
    python3 wait_for_callbacks.py $x9 $server_callback_port 1
    ssh $c1 "sh $run_path/run_iperf_connect_to_one_server.sh $r $iteration seq m2 $m5"
    ssh $c2 "sh $run_path/run_iperf_connect_to_one_server.sh $r $iteration seq m2 $m5"
    ssh $c3 "sh $run_path/run_iperf_connect_to_one_server.sh $r $iteration seq m2 $m5"
    ssh $m5 "killall iperf"

    ssh $s6 "sh $run_path/run_iperf_server_side.sh $r $iteration seq" &
    python3 wait_for_callbacks.py $x9 $server_callback_port 1
    ssh $m4 "sh $run_path/run_iperf_connect_to_one_server.sh $r $iteration seq s1 $s6"
    ssh $m5 "sh $run_path/run_iperf_connect_to_one_server.sh $r $iteration seq s1 $s6"
    ssh $s6 "killall iperf"

    # read-only data flow direction
    echo "\n--- ${r}: run iperf iteration $iteration :: sequential mode :: clients <-- middleware -- server ---"
    ssh $m4 "sh $run_path/run_iperf_server_side.sh $r $iteration seq" &
    python3 wait_for_callbacks.py $x9 $server_callback_port 1
    ssh $s6 "sh $run_path/run_iperf_connect_to_one_server.sh $r $iteration seq m1 $m4"
    ssh $m4 "killall iperf"

    ssh $m5 "sh $run_path/run_iperf_server_side.sh $r $iteration seq" &
    python3 wait_for_callbacks.py $x9 $server_callback_port 1
    ssh $s6 "sh $run_path/run_iperf_connect_to_one_server.sh $r $iteration seq m2 $m5"
    ssh $m5 "killall iperf"

    ssh $c1 "sh $run_path/run_iperf_server_side.sh $r $iteration seq" &
    python3 wait_for_callbacks.py $x9 $server_callback_port 1
    ssh $m4 "sh $run_path/run_iperf_connect_to_one_server.sh $r $iteration seq c1 $c1"
    ssh $m5 "sh $run_path/run_iperf_connect_to_one_server.sh $r $iteration seq c1 $c1"
    ssh $c1 "killall iperf"

    ssh $c2 "sh $run_path/run_iperf_server_side.sh $r $iteration seq" &
    python3 wait_for_callbacks.py $x9 $server_callback_port 1
    ssh $m4 "sh $run_path/run_iperf_connect_to_one_server.sh $r $iteration seq c2 $c2"
    ssh $m5 "sh $run_path/run_iperf_connect_to_one_server.sh $r $iteration seq c2 $c2"
    ssh $c2 "killall iperf"

    ssh $c3 "sh $run_path/run_iperf_server_side.sh $r $iteration seq" &
    python3 wait_for_callbacks.py $x9 $server_callback_port 1
    ssh $m4 "sh $run_path/run_iperf_connect_to_one_server.sh $r $iteration seq c3 $c3"
    ssh $m5 "sh $run_path/run_iperf_connect_to_one_server.sh $r $iteration seq c3 $c3"
    ssh $c3 "killall iperf"

    # run iperf to measure bandwidth -- parallel testing simulating ...
    # ... "write-only" load
    echo "\n--- ${r}: run iperf iteration $iteration :: parallel mode :: clients -- middleware --> server ---"
    pssh -h middlewares.hostfile -H $s6 "sh $run_path/run_iperf_server_side.sh $r $iteration par" &
    python3 wait_for_callbacks.py $x9 $server_callback_port 3
    pssh -h clients.hostfile "sh $run_path/run_iperf_connect_to_two_servers.sh $r $iteration par m1 $m4 m2 $m5" &
    pssh -h middlewares.hostfile "sh $run_path/run_iperf_connect_to_one_server.sh $r $iteration par s1 $s6" &
    python3 wait_for_callbacks.py $x9 $client_callback_port 5
    pssh -h middlewares.hostfile -H $s6 "killall iperf"

    # ... "read-only" load
    echo "\n--- ${r}: run iperf iteration $iteration :: parallel mode :: clients <-- middleware -- server ---"
    pssh -h clients_middlewares.hostfile "sh $run_path/run_iperf_server_side.sh $r $iteration par" &
    python3 wait_for_callbacks.py $x9 $server_callback_port 5
    pssh -H $s6 "sh $run_path/run_iperf_connect_to_two_servers.sh $r $iteration par m1 $m4 m2 $m5" &
    pssh -h middlewares.hostfile "sh $run_path/run_iperf_connect_to_three_servers.sh $r $iteration par c1 $c1 c2 $c2 c3 $c3" &
    python3 wait_for_callbacks.py $x9 $client_callback_port 3
    pssh -h clients_middlewares.hostfile "killall iperf"
done
